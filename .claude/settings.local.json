{
  "permissions": {
    "allow": [
      "mcp__serena__list_dir",
      "Bash(npm run type-check:*)",
      "Bash(python -m pytest --collect-only)",
      "mcp__serena__find_symbol",
      "Bash(python -m pytest tests/api/endpoints/test_excel.py -v)",
      "Bash(python -m pytest tests/api/endpoints/test_excel.py --cov=app.api.endpoints.excel --cov=app.services.excel_service --cov-report=term-missing)",
      "Bash(python -m pytest tests/api/endpoints/test_excel.py --cov=app.api.endpoints.excel --cov=app.services.excel_service --cov-report=term-missing -v)",
      "mcp__serena__list_memories",
      "Bash(python -m pytest tests/api/test_rate_limits.py -v --tb=short)",
      "Bash(python3 -m pytest:*)",
      "Bash(if [ -d \"venv\" ])",
      "Bash(then source venv/bin/activate)",
      "Bash(python -m pytest:*)",
      "Bash(else echo \"No venv found\")",
      "Bash(fi)",
      "Bash(source:*)",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__activate_project",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "mcp__serena__think_about_whether_you_are_done",
      "Bash(npm install:*)",
      "mcp__magic__21st_magic_component_builder",
      "Bash(cat:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(npm test:*)",
      "Bash(beads issue close:*)",
      "Bash(bd issue create:*)",
      "Bash(bd:*)",
      "Read(//home/frankbria/projects/**)",
      "mcp__tavily__tavily-search",
      "mcp__serena__write_memory",
      "Bash(else python3 -m pytest tests/services/scheduler/test_task_graph.py -v)",
      "Bash(python:*)",
      "Bash(git checkout:*)",
      "Bash(find:*)",
      "Bash(pytest:*)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "Bash(flake8:*)",
      "Bash(mypy:*)",
      "Bash(git merge feature/monte-carlo-b2-task-sampling --no-ff -m \"$(cat <<''EOF''\nfeat(scheduler): Merge Phase B Monte Carlo Simulation\n\nMerges Phase B implementation of Advanced Monte Carlo Simulation (Task 5.1)\ninto main branch.\n\nPhase B Components:\n- B1: Probability Distributions (Triangular, Uniform, Normal)\n- B2: Task Sampling with distribution integration\n- B3-B5: Monte Carlo Engine with statistical analysis\n\nQuality Metrics:\n- Tests: 234 passing (100% pass rate)\n  - Phase A: 134 tests\n  - Phase B: 100 tests (41 distributions + 35 sampling + 24 engine)\n- Coverage: 97% overall (exceeds 85% requirement)\n  - distributions.py: 100%\n  - monte_carlo.py: 100%\n  - task_sampler.py: 90%\n- Performance: ~1,800 iterations/second\n- Statistical Accuracy: ±1-2% mean, ±4% percentiles\n\nFeatures:\n- Three probability distributions with PERT formula support\n- Flexible task sampling with distribution validation\n- 10,000+ iteration Monte Carlo simulation\n- Percentile calculations (P10, P50, P90, P95, P99)\n- Full integration with Phase A scheduler\n\nCommits merged:\n- cf8532c: Phase B1 probability distributions\n- 769e39d: Phase B1 distributions and B2 task sampling\n- d5cea48: Phase B3-B5 Monte Carlo engine with statistics\n\nNote: E501 line length violations exist but match existing codebase standards.\nTechnical debt tracked in memory for future cleanup.\nEOF\n)\")",
      "Bash(git branch:*)",
      "mcp__serena__read_memory",
      "Bash(if [ -f \"venv/bin/activate\" ])",
      "Bash(if [ -f venv/bin/activate ])",
      "Bash(else echo \"Virtual environment not found\")",
      "Bash(chmod:*)",
      "Bash(wait:*)",
      "Bash(timeout 30 python -m pytest:*)",
      "Bash(pkill:*)"
    ],
    "deny": [],
    "ask": []
  }
}
